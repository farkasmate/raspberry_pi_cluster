#!/sbin/openrc-run

description='Customize node from kernel parameters.'

k3s_config_file=/etc/conf.d/k3s

depend() {
	need localmount
	before k3s
	keyword -stop
}

get_param() {
	out=$(grep -o "\(^\| \)${1}=\([^ ]*\)" /proc/cmdline)
	rc=${?}
	if [ ${rc} == 1 ]
	then
		eerror "Missing variable: ${1}"
		return ${rc}
	else
		echo ${out} | cut -d'=' -f2-
	fi
}

get_k3s_config() {
	k3s_exec=$(get_param K3S_EXEC)
	k3s_token=$(get_param K3S_TOKEN)
	k3s_url=$(get_param K3S_URL)

	cat <<-CONF
		# NOTE: Generated by /etc/init.d/customize
		export PATH="/usr/libexec/cni/:\${PATH}"
		K3S_EXEC="${k3s_exec}"
		K3S_OPTS=""

		K3S_LOGFILE="/var/log/k3s/k3s.log"
	CONF

	# NOTE: Non-HA config
	if [ "${k3s_exec}" == "agent" ]
	then
		cat <<-AGENT
			export K3S_TOKEN="${k3s_token}"
			export K3S_URL="${k3s_url}"
		AGENT
	fi
}

start_hostname() {
	ebegin 'Updating hostname'

	get_param HOSTNAME > /etc/hostname
	rc=${?}

	eend ${rc}
	return ${rc}
}

start_hosts() {
	ebegin 'Updating hosts file'

	hosts_content=$(sed "s/^\(127\.0\.1\.1\t\).*$/\1$(get_param HOSTNAME)/" /etc/hosts)
	echo "${hosts_content}" > /etc/hosts
	rc=${?}

	eend ${rc}
	return ${rc}
}

start_k3s() {
	ebegin "Updating ${k3s_config_file}"

	get_k3s_config > ${k3s_config_file}

	if [ "${k3s_exec}" == "" ] || [ "${k3s_token}" == "" ] || [ "${k3s_url}" == "" ]
	then
		eend 1
		return 1
	fi

	eend 0
	return 0
}

status_hostname() {
	old_hostname=$(cat /etc/hostname)
	new_hostname=$(get_param HOSTNAME)

	test "${old_hostname}" == "${new_hostname}"
}

status_hosts() {
	grep -q "^127\.0\.1\.1\t$(get_param HOSTNAME)$" /etc/hosts
}

status_k3s() {
	old_k3s_config=$(cat ${k3s_config_file})
	new_k3s_config=$(get_k3s_config)

	test "${old_k3s_config}" == "${new_k3s_config}"
}

start() {
	start_hostname && start_hosts && start_k3s
}

status() {
	if status_hostname && status_hosts && status_k3s
	then
		mark_service_started
	else
		mark_service_stopped
	fi

	default_status
}
